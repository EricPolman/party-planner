// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @default(uuid()) @id
  externalId String @unique
  email String  @unique
  firstName  String?
  lastName  String?
  events Event[]
}

model Event {
  id        String   @default(uuid()) @id
  title     String
  invitations Invitation[]
  description   String?
  organisers    User[]
}

model Invitation {
  id        String   @default(uuid()) @id
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId   String
  code      String @unique
  startDate   DateTime @default(now()) @db.Timestamptz(3)
  endDate     DateTime? @default(now()) @db.Timestamptz(3)
  location    String?
  title     String
  message     String
  isActive Boolean? @default(true)
  invitees     Invitee[] 
}

model Invitee {
  id        String   @default(uuid()) @id
  email     String?
  phoneNumber String?
  firstName String?
  lastName  String?
  invitation     Invitation    @relation(fields: [invitationId], references: [id], onDelete: Cascade)
  invitationId   String
  status    InviteeStatus @default(PENDING)
  respondedAt DateTime? @db.Timestamptz(3)
  comments  String?
}

enum InviteeStatus {
  PENDING
  ACCEPTED
  DECLINED
  MAYBE
}
